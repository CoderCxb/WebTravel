"use strict";(self.webpackChunkweb_travel=self.webpackChunkweb_travel||[]).push([[9566],{9141:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-1a62f414",path:"/javascript/data-type/object/date.html",title:"Date - 日期",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"常见时间",slug:"常见时间",children:[]},{level:2,title:"构造函数",slug:"构造函数",children:[]},{level:2,title:"静态方法",slug:"静态方法",children:[]},{level:2,title:"实例方法",slug:"实例方法",children:[]},{level:2,title:"时间矫正",slug:"时间矫正",children:[]},{level:2,title:"应用",slug:"应用",children:[]}],filePathRelative:"javascript/data-type/object/date.md",git:{updatedTime:1640796436e3,contributors:[{name:"cxb",email:"chenxiaobin_cxb@youzan.com",commits:3}]}}},8967:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});const p=(0,a(6252).uE)('<h1 id="date-日期" tabindex="-1"><a class="header-anchor" href="#date-日期" aria-hidden="true">#</a> Date - 日期</h1><p>Date对象表示从1970年1月1日（UTC）到某个时刻的时间,提供处理日期和时间的方法(本地时间和UTC时间)。</p><h2 id="常见时间" tabindex="-1"><a class="header-anchor" href="#常见时间" aria-hidden="true">#</a> 常见时间</h2><p>一般在项目开发中主要使用的都是本地时间(计算机所在地的时间),对于我们来说就是北京时间。</p><h6 id="utc" tabindex="-1"><a class="header-anchor" href="#utc" aria-hidden="true">#</a> UTC</h6><p>UTC(Universal Time Coordinated) - 协调世界时、世界标准时间: 是以原子时秒长为基础，在时刻上尽量接近于世界时的一种时间计量系统。</p><h6 id="iso" tabindex="-1"><a class="header-anchor" href="#iso" aria-hidden="true">#</a> ISO</h6><p>ISO(International Organization for Standardization) - 国际标准组织: 以国际标准ISO 8601表示日期和时间</p><h6 id="gmt" tabindex="-1"><a class="header-anchor" href="#gmt" aria-hidden="true">#</a> GMT</h6><p>GMT(Greenwich Mean Time) - 格林尼治时间:格林尼治所在地的标准时间，也是表示地球自转速率的一种形式。</p><h6 id="cst" tabindex="-1"><a class="header-anchor" href="#cst" aria-hidden="true">#</a> CST</h6><p>CST(Chinese standard time) - 北京时间: 北京时间是中国采用国际时区东八时区的区时作为标准时间,中国全境（大陆、港澳、台湾）均采取北京时间（UTC+8),即北京时间比UTC晚8个小时。</p><h2 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数" aria-hidden="true">#</a> 构造函数</h2><p>Date构造函数创建一个Date的实例对象,默认是UTC,UTC早于北京时间8小时。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. 不接收参数时, 创建现在时间的date对象</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n\n<span class="token comment">// 2. 传入时间戳(毫秒数),计算从1970年1月1日（UTC）以来的时间的毫秒数</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1640404800000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n\n<span class="token comment">// 3. 传入date对象</span>\n<span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> copyDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 4. 传入的能被Date.parse的字符串</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;December 25, 2021 12:00:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2021-12-25T 12:00:00Z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;12/25/2021 12:00:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n\n<span class="token comment">// 5. new Date(year,monthIndex,[,date,hours,minutes,seconds,milliseconds])</span>\n<span class="token comment">// 除了年、月是必填,其他的是可选</span>\n<span class="token comment">// 0到99会被映射至1900年至1999年</span>\n<span class="token comment">// 注意: 月份的范围是0～11,0是1月,11是12月</span>\n<span class="token comment">// date默认为1, hours、minutes、seconds、milliseconds 默认为0</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021-11-30T16:00:00.000Z</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">00</span><span class="token punctuation">,</span><span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="静态方法" tabindex="-1"><a class="header-anchor" href="#静态方法" aria-hidden="true">#</a> 静态方法</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. 1970年1月1日（UTC）到当前时间的毫秒数,记住是毫秒数</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1640455537359</span>\n\n<span class="token comment">// 2. Date.parse 解析一个表示某个日期的字符串(符合RFC2822/IETF语法),并返回从1970年1月1日（UTC）到该日期对象（该日期对象的UTC时间）的毫秒数</span>\n<span class="token comment">// 如果日期字符串无法解析, 则返回NaN</span>\n<span class="token comment">// 一般日期字符串都是通过生成的,可以直接使用</span>\n\n<span class="token comment">// ISO日期格式 - 具体时间可以没有,但是必须有日期</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;2021-12-25&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1640390400000</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;2021-12-25T12:00:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 1640404800000</span>\n\n<span class="token comment">// RFC2822 / IETF 日期格式</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;Sat Dec 25 2021 12:00:00 GMT+0800&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 1640404800000</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;December 25, 2021 12:00:00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 1640404800000</span>\n\n<span class="token comment">// 3. Date.UTC 获取从1970年1月1日（UTC）到指定时间(UTC时间)的毫秒数</span>\n<span class="token keyword">const</span> UTCChristmas <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token constant">UTC</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>UTCChristmas<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021/12/25 上午8:00:00</span>\n\n<span class="token comment">// 记住,构造函数是获取 从1970年1月1日（UTC）到指定时间(本地时间)的毫秒数,对应的UTC时间还得往前8小时</span>\n<span class="token keyword">const</span> LocaleChristmas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>LocaleChristmas<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021/12/25 上午12:00:00, 上午12:00表示的就是0点</span>\n\n<span class="token comment">// 解析: 使用构造函数创建的是本地时间的2021-12-25 00:00:00,对应的UTC时间得往前8小时,也就是 2021-12-24 16:00:00</span>\n<span class="token comment">//      而Date.UTC创建的是UTC时间的2021-12-25 00:00:00,对应的本地时间还得往后8小时,也就是2021-12-25 08:00:00</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="实例方法" tabindex="-1"><a class="header-anchor" href="#实例方法" aria-hidden="true">#</a> 实例方法</h2><h6 id="读取时间" tabindex="-1"><a class="header-anchor" href="#读取时间" aria-hidden="true">#</a> 读取时间</h6><p>实例上有获取时间具体信息的方法,可以获取本地时间,也可以获取UTC时间,以下展示本地时间的获取方式。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Christmas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">00</span><span class="token punctuation">,</span><span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 1. getTime 返回从1970年1月1日0时0分0秒(UTC)到date实例时间的毫秒数</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取时间毫秒表示:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取时间毫秒表示: 1640404800000</span>\n\n<span class="token comment">// 2. getFullYear获取当前时间年份</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间年份:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 获取年份: 2021 </span>\n\n<span class="token comment">// 3. getMonth获取当前时间月份(0～11,0表示1月,11表示12月,为了正常显示,要+1)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间月份:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 获取月份: 12</span>\n\n<span class="token comment">// 4. getDate获取当前时间日期</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间日期:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 获取日期: 25</span>\n\n<span class="token comment">// 5. getHours获取当前时间的小时</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间时钟:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 获取时钟: 12</span>\n\n<span class="token comment">// 6. getMinutes获取当前时间的分钟</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间分钟:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 获取分钟: 0</span>\n\n<span class="token comment">// 7. getSeconds获取当前时间的秒钟</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间秒钟:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 获取秒钟: 0</span>\n\n<span class="token comment">// 8. getMilliseconds获取当前时间的毫秒钟</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间毫秒钟:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 获取毫秒数: 0</span>\n\n<span class="token comment">// 9. getDay获取当前时间在这周处于第几天(1~7,也就是周一到周日)</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取本地时间周几:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// 获取天数: 6</span>\n\n<span class="token comment">// 10. getTimezoneOffset获取UTC和当前时间的时差(单位是分钟),我们是北京时间, 和UTC时差为8个小时,也就是480分钟</span>\n<span class="token comment">// 也就是用UTC的时间 - 当前时区的时间</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取时差:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 获取时差: -480</span>\n\n<span class="token comment">// 获取UTC时间</span>\n<span class="token comment">// 与获取本地时间同理,一定要记住,UTC的时间是早于北京时间8个小时</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC年份:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 获取UTC年份: 2021</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC月份:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 获取UTC月份: 11</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC日期:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">// 获取UTC日期: 25</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC时钟:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 获取UTC时钟: 4</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC分钟:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// 获取UTC分钟: 0</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC秒钟:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// 获取UTC秒钟: 0</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC周几:&#39;</span><span class="token punctuation">,</span> Christmas<span class="token punctuation">.</span><span class="token function">getUTCDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">// 获取UTC周几: 6</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;获取UTC毫秒钟:&#39;</span><span class="token punctuation">,</span>Christmas<span class="token punctuation">.</span><span class="token function">getUTCMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 获取UTC毫秒钟: 0</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h6 id="设置时间" tabindex="-1"><a class="header-anchor" href="#设置时间" aria-hidden="true">#</a> 设置时间</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Christmas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nChristmas<span class="token punctuation">.</span><span class="token function">setFullYear</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// 设置年份 </span>\nChristmas<span class="token punctuation">.</span><span class="token function">setMonth</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 设置月份, 0~11,0是1月,11是12月</span>\nChristmas<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 设置日期</span>\nChristmas<span class="token punctuation">.</span><span class="token function">setHours</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 设置时钟</span>\nChristmas<span class="token punctuation">.</span><span class="token function">setMinutes</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// 设置分钟</span>\nChristmas<span class="token punctuation">.</span><span class="token function">setSeconds</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// 设置秒钟</span>\nChristmas<span class="token punctuation">.</span><span class="token function">setMilliseconds</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// 设置毫秒</span>\n\n<span class="token comment">// 也可以直接设置从从1970年1月1日（UTC）开始的毫秒数, 很少用到</span>\n<span class="token comment">// Christmas.setTime(1640404800000);      </span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Christmas<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n\n<span class="token comment">// UTC的方法也一样,就不演示了</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h6 id="输出时间" tabindex="-1"><a class="header-anchor" href="#输出时间" aria-hidden="true">#</a> 输出时间</h6><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> Christmas <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">00</span><span class="token punctuation">,</span><span class="token number">00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token comment">// 1. toLocaleDateString 返回日期对象日期部分的字符串</span>\n  <span class="token string">&#39;toLocaleDateString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 2021/12/25</span>\n\n  <span class="token comment">// 2. toLocaleTimeString 返回日期对象时间部分的字符串</span>\n  <span class="token string">&#39;toLocaleTimeString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toLocaleTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 下午12:00:00</span>\n\n  <span class="token comment">// 3. toLocaleString 返回该日期对象的日期和时间字符串, 相当于 toLocaleDateString + &#39; &#39; + toLocaleTimeString</span>\n  <span class="token string">&#39;toLocaleString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>         <span class="token comment">// 2021/12/25 下午12:00:00</span>\n\n  <span class="token comment">// 6. toDateString 返回日期对象日期部分的美式英语日期格式的字符串</span>\n  <span class="token string">&#39;toDateString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token comment">// Sat Dec 25 2021</span>\n\n  <span class="token comment">// 7. toTimeString 返回日期对象时间部分的美式英语日期格式的字符串</span>\n  <span class="token string">&#39;toTimeString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>             <span class="token comment">// 12:00:00 GMT+0800 (中国标准时间)</span>\n\n  <span class="token comment">// 8.Date实例重写了toString方法,返回日期对象日期和时间的美式英语日期格式的字符串</span>\n  <span class="token comment">// 相当于 toDateString + &#39; &#39; +  toTimeString</span>\n  <span class="token string">&#39;toString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token comment">// Sat Dec 25 2021 12:00:00 GMT+0800 (中国标准时间)</span>\n\n  <span class="token comment">// 9. toUTCString 返回UTC时间的美式英语日期格式的字符串</span>\n  <span class="token string">&#39;toUTCString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               <span class="token comment">// Sat, 25 Dec 2021 04:00:00 GMT</span>\n  \n  <span class="token comment">// 10. toISOString 返回ISO格式的字符串: YYYY-MM-DDTHH:mm:ss.sssZ</span>\n  <span class="token comment">// 时区总是UTC(协调世界时),加一个后缀“Z”标识</span>\n  <span class="token string">&#39;toISOString&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>               <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n\n  <span class="token comment">// 11. toJSON 返回一个JSON格式字符串(使用 toISOString())</span>\n  <span class="token string">&#39;toJSON&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                         <span class="token comment">// 2021-12-25T04:00:00.000Z</span>\n\n  <span class="token comment">// 12. valueOf 返回和getTime一样的毫秒数</span>\n  <span class="token string">&#39;valueoOf&#39;</span><span class="token operator">:</span> Christmas<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                       <span class="token comment">// 1640404800000</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           \n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Christmas<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> Christmas<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div><h2 id="时间矫正" tabindex="-1"><a class="header-anchor" href="#时间矫正" aria-hidden="true">#</a> 时间矫正</h2><p>通过构造函数和setXXX的形式设置时间时,如果传入的日期超出,则会对时间进行矫正。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1. 元旦节 - 2021/1/1</span>\n<span class="token keyword">const</span> newYear <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newYear<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021/1/1 上午12:00:00</span>\n\n<span class="token comment">/// 这也是元旦 - 2020/12/32 因为12月只有31天, 32天则是下一个月的第一天,就变成 2021/1/1</span>\n<span class="token keyword">const</span> newYear2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newYear2<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2021/1/1 上午12:00:00</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><p>Date的应用中,最经常用到的无非就是时间格式化和时间差值的计算了。</p><ul><li>时间格式化: 当以上date实例提供的输出方法不能够满足我们的需求的时候,就需要手动的获取各个属性,然后根据需求做相应的操作。</li><li>时间差值: 计算两个日期之间的时间差,通过获取两个日期的毫秒数,进行减法运(-),就可以获取两个日期之间间隔的毫秒数,然后转换成需要的单位。</li></ul><h6 id="实战" tabindex="-1"><a class="header-anchor" href="#实战" aria-hidden="true">#</a> 实战</h6><p>假设现在正在完成一个聊天的项目,涉及到聊天消息相关的功能,现在有个需求,编写一个工具类函数,接收一个date对象,并根据和当前时间的差值,返回不同的结果。</p><ul><li>过去30秒内, 返回&#39;刚刚&#39;</li><li>30秒以上,但是是同一天, 返回格式 &#39;HH:mm&#39;,如 &#39;16:00&#39;</li><li>昨天的date对象, 返回 &#39;昨天 HH:mm&#39;, 如 &#39;昨天 16:00&#39;</li><li>昨天以前,但是是同一年, 返回格式 &#39;X月X日 HH:mm&#39;,如 &#39;12月25日 16:00&#39;</li><li>去年以及再往前, 返回 &#39;XXXX年X月X日 HH:mm&#39;, 如 &#39;2016年12月11日 16:00&#39;</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token doc-comment comment">/**\n * \n * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Date<span class="token punctuation">}</span></span> <span class="token parameter">date</span> 日期对象\n * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> 格式化后的日期字符串\n */</span>\n<span class="token keyword">function</span> <span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token comment">// 需要先获取当前时间和接收时间的 date对象和毫秒数</span>\n  <span class="token comment">// 毫秒数用来计算差值,date对象用来获取年/月/日/时/分</span>\n  <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 当前时间的date对象</span>\n  <span class="token keyword">const</span> nowTime <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 当前时间的毫秒表示</span>\n  <span class="token keyword">const</span> dateTime <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 接收的date对象的毫秒数</span>\n  <span class="token keyword">const</span> diff <span class="token operator">=</span> dateTime <span class="token operator">-</span> nowTime<span class="token punctuation">;</span> <span class="token comment">// 时间差值, 单位是毫秒</span>\n\n  <span class="token comment">// dateMap用于获取存储date的年/月/日/时/分, 目前用到的就这些,根据需要存储</span>\n  <span class="token keyword">const</span> dateMap <span class="token operator">=</span> <span class="token punctuation">{</span>\n    year<span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    mouth<span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>\n    day<span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    hour<span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    minute<span class="token operator">:</span> date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  \n  <span class="token comment">// 这个是昨天的date对象,用于等会获取昨天的日期部分</span>\n  <span class="token keyword">const</span> yesterday <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowTime <span class="token operator">-</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// 根据年/月/日/时/分和时间差值来判断两个时间之间的关系</span>\n  <span class="token comment">// 1. 时间间隔小于等于 30秒</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>diff<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">30000</span> <span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&#39;刚刚&#39;</span><span class="token punctuation">;</span>\n  <span class="token comment">// 2. 时间间隔大于30秒,但是是同一天</span>\n  <span class="token comment">// 通过比较now(现在)的日期部分和date对象的日期部分</span>\n  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> date<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>hour<span class="token punctuation">,</span> minute<span class="token punctuation">}</span> <span class="token operator">=</span> dateMap<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hour<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>minute<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n  <span class="token comment">// 3. 昨天的消息, 比较昨天的日期部分和 date的日期部分</span>\n  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>yesterday<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> date<span class="token punctuation">.</span><span class="token function">toLocaleDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> hour<span class="token punctuation">,</span> minute <span class="token punctuation">}</span> <span class="token operator">=</span> dateMap<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">昨天 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hour<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>minute<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n  <span class="token comment">// 4. 年份相同(同年),但是不是今天、不是昨天(昨天和今天在上面就return了)</span>\n  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> dateMap<span class="token punctuation">.</span>year<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>mouth<span class="token punctuation">,</span> day<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">}</span> <span class="token operator">=</span> dateMap<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mouth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">月</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">日 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hour<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>minute<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n  <span class="token comment">// 5. 年份不同</span>\n  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>year<span class="token punctuation">,</span>mouth<span class="token punctuation">,</span> day<span class="token punctuation">,</span> hour<span class="token punctuation">,</span> minute<span class="token punctuation">}</span> <span class="token operator">=</span> dateMap<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">年</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mouth<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">月</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">日 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hour<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>minute<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 因为是以当前时间作为参照,所以不同时间打印出来的也是不一样的,关注返回格式即可</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">9000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 刚刚, 9秒前</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 10:55, 一小时前</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 昨天 11:55, 一天前</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">48</span> <span class="token operator">*</span> <span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12月25日 11:55, 两天前</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">dateFormat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">365</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">3600000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 2020年12月27日 11:55, 365天前</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div>',35),t={},o=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);